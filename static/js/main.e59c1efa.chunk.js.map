{"version":3,"sources":["data/routes.js","mappers/PostMapper.tsx","services/FirebaseService.tsx","mappers/UserMapper.tsx","components/Navbar/index.tsx","strapped/Jumbotron/index.tsx","strapped/Container/index.tsx","strapped/Card/index.tsx","strapped/Grid/index.tsx","components/Blog/index.tsx","data/about.js","components/About/index.tsx","data/books.js","components/Books/index.tsx","components/PostForm/index.tsx","App.tsx","reportWebVitals.js","index.jsx"],"names":["routes","toPostModel","dto","id","title","description","date","convertDateDto","link","linkText","img","imgAlt","dateDto","Date","month","day","year","parsedTime","parse","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","postsApi","db","getDatabase","ref","FirebaseService","createContext","usePosts","useState","posts","setPosts","useEffect","onValue","snapshot","postObj","val","postModels","Object","keys","map","key","sendPost","newPost","model","getTime","push","deletePost","postId","postIdApi","remove","useUser","userData","canCreate","user","setUser","uid","userIdApi","userObj","userModel","displayName","email","isAdmin","toUserModel","newUser","useAuthState","useCollectionData","providers","google","GoogleAuthProvider","signInWithPopup","Navbar","className","to","href","rel","target","xmlns","width","height","fill","viewBox","d","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","SignIn","useContext","userSignIn","signInHandler","a","provider","aria-haspopup","aria-labelledby","onClick","signOut","Jumbotron","children","Container","Card","variant","maxWidth","useMemo","style","margin","padding","minWidth","Body","TopImage","src","alt","Title","Text","Link","text","Grid","Column","Row","PostCard","post","onDelete","canDelete","display","toLocaleDateString","hour","minute","second","postDateComparer","b","Blog","postsFeed","sort","aboutData","About","data","dataIndex","length","textIndex","booksData","author","review","pages","Books","book","getInitialState","PostForm","setPost","updatePost","value","htmlFor","placeholder","onChange","event","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e59c1efa.chunk.js","sourcesContent":["export const routes = {\n  blog: \"/\",\n  about: \"/about\",\n  books: \"/books\",\n  newPost: \"/posts/new\",\n};\n","import { PostModel, PostDto } from '../types';\r\n\r\nexport function toPostDto(model: PostModel): PostDto {\r\n    return {\r\n        id: model.id,\r\n        title: model.title,\r\n        description: model.description,\r\n        date: model.date.getTime(),\r\n        link: model.link,\r\n        linkText: model.linkText,\r\n        img: model.img,\r\n        imgAlt: model.imgAlt,\r\n    }\r\n}\r\n\r\nexport function toPostModel(dto: PostDto): PostModel {\r\n\r\n    return {\r\n        id: dto.id ?? '',\r\n        title: dto.title ?? '',\r\n        description: dto.description ?? '',\r\n        date: convertDateDto(dto.date),\r\n        link: dto.link ?? '',\r\n        linkText: dto.linkText ?? '',\r\n        img: dto.img ?? '',\r\n        imgAlt: dto.imgAlt ?? '',\r\n    }\r\n}\r\n\r\nfunction convertDateDto(dateDto?: number | { month: string, day: string, year : string}): Date {\r\n    if (typeof dateDto === 'number') {\r\n        return new Date(dateDto);\r\n    }\r\n\r\n    if (typeof dateDto === 'object' && dateDto['month'] && dateDto['day'] && dateDto['year']) {\r\n        const { month, day, year } = dateDto as {\r\n            month: string;\r\n            day: string;\r\n            year: string;\r\n        }\r\n\r\n        const parsedTime = Date.parse(`${month} ${day}, ${year}`);\r\n        return new Date(parsedTime);\r\n    }\r\n\r\n    return new Date(1900, 1, 1);\r\n}","import { createContext, useEffect, useState } from \"react\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup, User } from \"firebase/auth\";\r\nimport { getDatabase, ref, onValue, push, remove } from \"firebase/database\";\r\n\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { PostDto, PostModel, UserDto, UserModel } from \"../types\";\r\nimport { toPostDto, toPostModel, toUserModel } from \"../mappers\";\r\n\r\nconst app = initializeApp({\r\n  apiKey: \"AIzaSyAkhIhYHBzSJDCzGdkT5sLf5y5Gfvzr-8s\",\r\n  authDomain: \"roybeast-blog.firebaseapp.com\",\r\n  databaseURL: \"https://roybeast-blog-default-rtdb.firebaseio.com\",\r\n  projectId: \"roybeast-blog\",\r\n  storageBucket: \"roybeast-blog.appspot.com\",\r\n  messagingSenderId: \"1083253225131\",\r\n  appId: \"1:1083253225131:web:bba367f79c3aa1aaf169ee\",\r\n});\r\n\r\nconst auth = getAuth();\r\n\r\nconst postsApi = () => {\r\n  const db = getDatabase();\r\n  return ref(db, \"posts\");\r\n};\r\n\r\nconst useUser = (userData: User | null | undefined, canCreate?: boolean) => {\r\n  const [user, setUser] = useState<UserModel>();\r\n\r\n  useEffect(() => {\r\n    if (!userData?.uid) {\r\n      return;\r\n    }\r\n\r\n    const db = getDatabase();\r\n    const userIdApi = ref(db, `users/${userData.uid}`);\r\n    onValue(userIdApi, (snapshot) => {\r\n      const userObj = snapshot.val();\r\n      if (!userObj) {\r\n          if (canCreate) {\r\n            const newUser = {\r\n            displayName: userData.displayName,\r\n            email: userData.email,\r\n            };\r\n\r\n            push(userIdApi, newUser);\r\n          }\r\n      } else {\r\n        const userList: UserDto[] = Object.keys(userObj).map((key) => ({\r\n          ...userObj[key],\r\n          id: key,\r\n        }));\r\n\r\n        const userModel = toUserModel(userList[0]);\r\n        setUser(userModel);\r\n      }\r\n    });\r\n\r\n  }, [userData, canCreate]);\r\n\r\n  return [user];\r\n};\r\n\r\nconst sendPost = (newPost: PostModel) => {\r\n  const dto = toPostDto(newPost);\r\n  delete dto.id;\r\n  push(postsApi(), dto);\r\n};\r\n\r\nconst deletePost = (postId: string) => {\r\n    const db = getDatabase();\r\n    const postIdApi = ref(db, `posts/${postId}`);\r\n    remove(postIdApi);\r\n}\r\n\r\nconst usePosts = () => {\r\n  const [posts, setPosts] = useState<PostModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    onValue(postsApi(), (snapshot) => {\r\n      const postObj = snapshot.val();\r\n      if (postObj) {\r\n        const postList: PostDto[] = Object.keys(postObj).map((key) => ({\r\n          ...postObj[key],\r\n          id: key,\r\n        }));\r\n\r\n        const postModels = postList.map(toPostModel);\r\n        setPosts(postModels);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return [posts];\r\n};\r\n\r\nexport const FirebaseService = createContext({\r\n  usePosts,\r\n  sendPost,\r\n  deletePost,\r\n  useUser,\r\n  app,\r\n  auth,\r\n  useAuthState,\r\n  useCollectionData,\r\n  providers: {\r\n    google: GoogleAuthProvider,\r\n  },\r\n  signInWithPopup,\r\n});\r\n","import { UserDto, UserModel } from '../types';\r\n\r\nexport function toUserModel(dto: UserDto): UserModel {\r\n    return {\r\n        displayName: dto.displayName ?? '',\r\n        email: dto.email ?? '',\r\n        isAdmin: dto.isAdmin ?? false,\r\n    }\r\n}\r\n\r\nexport function toUserDto(model: UserModel): UserDto {\r\n    return {\r\n        displayName: model.displayName,\r\n        email: model.email,\r\n    }\r\n}","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { routes } from \"../../data/routes\";\nimport { FirebaseService } from \"../../services/FirebaseService\";\nimport \"firebase/firestore\";\n\nexport const Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to={routes.blog}>\n        Roybeast\n      </Link>\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item\">\n          <a\n            className=\"nav-link\"\n            href=\"https://www.linkedin.com/in/christopher-roybal/\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-linkedin\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z\" />\n            </svg>\n          </a>\n        </li>\n      </ul>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavDropdown\"\n        aria-controls=\"navbarNavDropdown\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={routes.blog}>\n              {\"Blog\"}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={routes.about}>\n              {\"About\"}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={routes.books}>\n              {\"Books\"}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <SignIn />\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nconst SignIn = () => {\n  const { auth, useAuthState, providers, signInWithPopup, useUser } =\n    useContext(FirebaseService);\n  const [userSignIn] = useAuthState(auth);\n  const [userData] = useUser(userSignIn);\n\n  const signInHandler = async () => {\n    // Google sign in\n    const provider = new providers.google();\n    await signInWithPopup(auth, provider);\n  };\n\n  const signOutHandler = () => {\n    auth.signOut();\n  };\n\n  return userSignIn ? (\n    <div className=\"dropdown\">\n      <button\n        className=\"btn btn-dark dropdown-toggle\"\n        type=\"button\"\n        id=\"dropDownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        {userSignIn.displayName}\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n        {userData?.isAdmin && (\n          <Link className=\"dropdown-item btn btn-dark\" to={routes.newPost}>\n            {\"New Post\"}\n          </Link>\n        )}\n        <button className=\"dropdown-item btn btn-dark\" onClick={signOutHandler}>\n          {\"Sign out\"}\n        </button>\n      </div>\n    </div>\n  ) : (\n    <button className=\"btn btn-dark\" onClick={signInHandler}>\n      {\"Sign in\"}\n    </button>\n  );\n};\n","import React from 'react';\r\n\r\ninterface JumbotronProps {\r\n    children: any;\r\n}\r\nexport const Jumbotron = ({ children }: JumbotronProps) => {\r\n    return <div className=\"jumbotron\">{children}</div>\r\n}","import React from \"react\";\r\n\r\ninterface ContainerProps {\r\n  children: any;\r\n}\r\nexport const Container = ({ children }: ContainerProps) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n","import React, { useMemo } from \"react\";\r\n\r\ninterface CardProps {\r\n  children: any;\r\n  variant: string;\r\n}\r\nconst Card = ({ children, variant }: CardProps) => {\r\n  const maxWidth = useMemo(() => {\r\n    if (variant === \"medium\") {\r\n      return \"36rem\";\r\n    } else if (variant === \"large\") {\r\n      return \"54rem\";\r\n    }\r\n\r\n    // small/default\r\n    return \"18rem\";\r\n  }, [variant]);\r\n\r\n  return (\r\n    <div className=\"card\" style={{ margin: \"4px\", padding: \"16px\", maxWidth, minWidth: \"18rem\" }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface BodyProps {\r\n  children: any;\r\n}\r\nconst Body = ({ children }: BodyProps) => {\r\n  return <div className=\"card-body\">{children}</div>;\r\n};\r\n\r\ninterface TopImageProps {\r\n  src: string;\r\n  alt: string;\r\n}\r\nconst TopImage = ({ src, alt }: TopImageProps) => {\r\n  return <img className=\"card-img-top\" src={src} alt={alt} />;\r\n};\r\n\r\ninterface TitleProps {\r\n  children: any;\r\n}\r\nconst Title = ({ children }: TitleProps) => {\r\n  return <h5 className=\"card-title\">{children}</h5>;\r\n};\r\n\r\ninterface TextProps {\r\n  children: any;\r\n}\r\nconst Text = ({ children }: TextProps) => {\r\n  return <p className=\"card-text\">{children}</p>;\r\n};\r\n\r\ninterface LinkProps {\r\n  href: string;\r\n  text: string;\r\n}\r\nconst Link = ({ href, text }: LinkProps) => {\r\n  return (\r\n    <a href={href} className=\"card-link\" target=\"_blank\" rel=\"noreferrer\">\r\n      {text}\r\n    </a>\r\n  );\r\n};\r\n\r\nCard.Body = Body;\r\nCard.TopImage = TopImage;\r\nCard.Title = Title;\r\nCard.Text = Text;\r\nCard.Link = Link;\r\n\r\nexport { Card };\r\n","import { Container } from '../Container';\r\nimport React from 'react';\r\n\r\ninterface GridProps {\r\n    children: any;\r\n}\r\nconst Grid = ({children}: GridProps) => {\r\n    return (\r\n        <Container>\r\n            {children}\r\n        </Container>\r\n    )\r\n}\r\n\r\ninterface RowProps {\r\n    children: any;\r\n}\r\nconst Row = ({children}: RowProps) => {\r\n    return (<div className=\"row\">{children}</div>)\r\n}\r\n\r\ninterface ColumnProps {\r\n    children: any;\r\n}\r\nconst Column = ({children}: ColumnProps) => {\r\n    return (<div className=\"col\">{children}</div>)\r\n}\r\n\r\nGrid.Column = Column;\r\nGrid.Row = Row;\r\n\r\nexport { Grid };","import React, { useContext, useMemo } from \"react\";\r\nimport { Card, Jumbotron } from \"../../strapped\";\r\nimport { FirebaseService } from \"../../services/FirebaseService\";\r\nimport { PostModel } from \"../../types\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\ninterface PostCardProps {\r\n  post: PostModel;\r\n  onDelete?: () => void;\r\n  canDelete?: boolean;\r\n}\r\nexport const PostCard = ({ post, onDelete, canDelete }: PostCardProps) => {\r\n  return (\r\n    <Card variant=\"medium\">\r\n      {post.img && <Card.TopImage src={post.img} alt={post.imgAlt} />}\r\n      <div style={{ display: \"flex\" }}>\r\n        <Card.Title>{post.title}</Card.Title>\r\n        {canDelete && (\r\n          <div className=\"ml-auto\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm\"\r\n              onClick={onDelete}\r\n            >\r\n              {\"X\"}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Card.Body>\r\n        <ReactMarkdown>{post.description}</ReactMarkdown>\r\n      </Card.Body>\r\n      {post.link && <Card.Link href={post.link} text={post.linkText} />}\r\n      <Card.Text>\r\n        {post.date.toLocaleDateString(\"en-US\", {\r\n          month: \"long\",\r\n          day: \"2-digit\",\r\n          year: \"numeric\",\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n          second: \"2-digit\",\r\n        })}\r\n      </Card.Text>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst postDateComparer = (a: PostModel, b: PostModel) => {\r\n  return b.date.getTime() - a.date.getTime();\r\n};\r\n\r\nexport const Blog = () => {\r\n  const { usePosts, useUser, useAuthState, deletePost, auth } =\r\n    useContext(FirebaseService);\r\n  const [postsFeed] = usePosts();\r\n  const [userSignIn] = useAuthState(auth);\r\n  const [userData] = useUser(userSignIn);\r\n  const posts = useMemo(\r\n    () => [...postsFeed].sort(postDateComparer),\r\n    [postsFeed]\r\n  );\r\n\r\n  const onDeleteHandler = (id: string) => {\r\n    deletePost(id);\r\n  };\r\n\r\n  return (\r\n    <Jumbotron>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <div>\r\n          {posts.map((post) => (\r\n            <PostCard\r\n              key={post.id}\r\n              post={post}\r\n              canDelete={userData?.isAdmin}\r\n              onDelete={() => onDeleteHandler(post.id)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Jumbotron>\r\n  );\r\n};\r\n","export const aboutData = [\n  {\n    title: \"About myself\",\n    text: [\n      \"Always hard to write about myself...\",\n      \"Presently working as a software developer.\",\n      \"Enjoys playing video games in free time.\",\n      \"Happily married since sometime in 2019.\",\n    ],\n  },\n  {\n    title: \"Software development\",\n    text: [\n      \"Strong C# background (desktop app, backend APIs, mobile app)\",\n      \"Various exposure to: C#, C++, C, Javascript, React, Objective-C, MySQL\",\n      \"have some exposure to: Docker, Github Actions, Jenkins\",\n      \"Currently working with React/Typescript/Javascript\",\n    ],\n  },\n  {\n    title: \"Education\",\n    text: [\"BS degree in Computer Science from Western Washington University\"],\n  },\n];\n","import React from \"react\";\r\nimport { Card, Grid, Jumbotron } from \"../../strapped\";\r\nimport { aboutData } from '../../data/about'\r\n\r\nexport const About = () => {\r\n  return (\r\n    <Jumbotron>\r\n      <Grid>\r\n        <Grid.Row>\r\n          {aboutData.map((data, dataIndex) => (\r\n            <Grid.Column key={dataIndex}>\r\n              <Card variant={data.text.length === 1 ? \"small\" : \"medium\"}>\r\n                <Card.Title>{data.title}</Card.Title>\r\n                {data.text.map((text, textIndex) => (\r\n                  <Card.Text key={textIndex}>{text}</Card.Text>\r\n                ))}\r\n              </Card>\r\n            </Grid.Column>\r\n          ))}\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Jumbotron>\r\n  );\r\n};\r\n","export const booksData = [\n  {\n    id: \"books-0\",\n    title: \"Level Up! The Guide to Great Video Game Design 2nd Edition\",\n    description: \"A book about game design\",\n    author: \"Scott Rogers\",\n    review: \"In Progress\",\n    pages: 535,\n    link: \"https://www.amazon.com/Level-Guide-Great-Video-Design/dp/1118877160/\",\n    linkText: \"Amazon\",\n  },\n];\n","import React from \"react\";\r\nimport { Card, Jumbotron } from \"../../strapped\";\r\nimport { booksData } from '../../data/books'\r\n\r\nexport const Books = () => {\r\n  return (\r\n    <Jumbotron>\r\n      {booksData.map((book) => (\r\n        <Card variant=\"large\" key={book.id}>\r\n          <Card.Title>{book.title}</Card.Title>\r\n          <Card.Text>{book.description}</Card.Text>\r\n          <Card.Text>{`Pages: ${book.pages}`}</Card.Text>\r\n          <Card.Text>{`Author: ${book.author}`}</Card.Text>\r\n          <Card.Text>{`Review: ${book.review}`}</Card.Text>\r\n          {book.link && <Card.Link href={book.link} text={book.linkText} />}\r\n        </Card>\r\n      ))}\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\n","import React, { useContext, useState } from \"react\";\r\nimport { FirebaseService } from \"../../services/FirebaseService\";\r\nimport { Jumbotron } from \"../../strapped\";\r\nimport { PostModel } from \"../../types\";\r\nimport { PostCard } from \"../Blog\";\r\n\r\nconst getInitialState = (): PostModel => {\r\n  return {\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    date: new Date(),\r\n    link: \"\",\r\n    linkText: \"\",\r\n    img: \"\",\r\n    imgAlt: \"\",\r\n  };\r\n};\r\n\r\nexport const PostForm = () => {\r\n  const [post, setPost] = useState(getInitialState());\r\n  const { sendPost } = useContext(FirebaseService);\r\n\r\n  const updatePost = (value: { [key: string]: any }) => {\r\n    setPost((post) => {\r\n      return { ...post, ...value };\r\n    });\r\n  };\r\n\r\n  const onSubmitHandler = () => {\r\n    sendPost({ ...post, date: new Date() });\r\n    setPost(getInitialState());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">{\"Title\"}</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              placeholder=\"Title\"\r\n              value={post.title}\r\n              onChange={(event) => updatePost({ title: event.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">{\"Description\"}</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              placeholder=\"Description\"\r\n              value={post.description}\r\n              onChange={(event) =>\r\n                updatePost({ description: event.target.value })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"link\">{\"Link\"}</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"link\"\r\n              placeholder=\"Link\"\r\n              value={post.link}\r\n              onChange={(event) => updatePost({ link: event.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"linkText\">{\"Link Text\"}</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"linkText\"\r\n              placeholder=\"Link Text\"\r\n              value={post.linkText}\r\n              onChange={(event) => updatePost({ linkText: event.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"img\">{\"Image\"}</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"img\"\r\n              placeholder=\"Image link\"\r\n              value={post.img}\r\n              onChange={(event) => updatePost({ img: event.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"imgAlt\">{\"Image Alternate Text\"}</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"imgAlt\"\r\n              placeholder=\"Image Alternate Text\"\r\n              value={post.imgAlt}\r\n              onChange={(event) => updatePost({ imgAlt: event.target.value })}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-dark\"\r\n            onClick={onSubmitHandler}\r\n          >\r\n            {\"Submit\"}\r\n          </button>\r\n        </form>\r\n      </Jumbotron>\r\n      <PostCard post={post} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Navbar, Blog, About, Books, PostForm } from \"./components\";\nimport { routes } from \"./data/routes\";\nimport { FirebaseService } from \"./services/FirebaseService\";\n\nfunction App() {\n  const { useAuthState, auth, useUser } = useContext(FirebaseService);\n  const [userSignIn] = useAuthState(auth);\n  const [userModel] = useUser(userSignIn, true);\n\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path={routes.books}>\n          <Books />\n        </Route>\n        <Route path={routes.about}>\n          <About />\n        </Route>\n        {userModel?.isAdmin && (\n          <Route path={routes.newPost}>\n            <PostForm />\n          </Route>\n        )}\n        <Route path={routes.blog}>\n          <Blog />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}