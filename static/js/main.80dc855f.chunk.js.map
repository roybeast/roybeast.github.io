{"version":3,"sources":["data/routes.js","services/FirebaseService.jsx","components/Navbar/index.jsx","strapped/Jumbotron/index.jsx","strapped/Container/index.jsx","strapped/Card/index.jsx","strapped/Grid/index.jsx","components/Blog/index.jsx","data/about.js","components/About/index.jsx","data/books.js","components/Books/index.jsx","components/PostForm/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["routes","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","postsApi","db","getDatabase","ref","FirebaseService","createContext","usePosts","useState","posts","setPosts","useEffect","isSubscribed","onValue","snapshot","postObj","val","postList","Object","keys","map","key","id","sendPost","newPost","push","deletePost","postId","postIdApi","remove","useUser","userData","canCreate","user","setUser","uid","userIdApi","userObj","userList","newUser","displayName","email","useAuthState","useCollectionData","providers","google","GoogleAuthProvider","signInWithPopup","Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","rel","target","xmlns","width","height","fill","viewBox","d","SignIn","useContext","userSignIn","signInHandler","a","provider","aria-haspopup","aria-labelledby","isAdmin","onClick","signOut","Jumbotron","children","style","Container","Card","variant","maxWidth","useMemo","margin","padding","minWidth","Body","TopImage","src","alt","Title","Text","Link","text","Grid","Column","Row","PostCard","post","onDelete","canDelete","display","title","description","link","linkText","date","day","month","year","parsePostDate","Date","parse","postDateComparer","b","aDate","Blog","postsFeed","sort","aboutData","About","data","dataIndex","length","textIndex","booksData","author","review","pages","Books","book","getInitialState","toLocaleDateString","PostForm","setPost","updatePost","value","htmlFor","placeholder","onChange","event","App","console","log","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80dc855f.chunk.js","sourcesContent":["export const routes = {\n  blog: \"/\",\n  about: \"/about\",\n  books: \"/books\",\n  newPost: \"/posts/new\",\n};\n","import { createContext, useEffect, useState } from \"react\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { getDatabase, ref, onValue, push, set, remove } from \"firebase/database\";\r\n\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\n\r\nconst app = initializeApp({\r\n  apiKey: \"AIzaSyAkhIhYHBzSJDCzGdkT5sLf5y5Gfvzr-8s\",\r\n  authDomain: \"roybeast-blog.firebaseapp.com\",\r\n  databaseURL: \"https://roybeast-blog-default-rtdb.firebaseio.com\",\r\n  projectId: \"roybeast-blog\",\r\n  storageBucket: \"roybeast-blog.appspot.com\",\r\n  messagingSenderId: \"1083253225131\",\r\n  appId: \"1:1083253225131:web:bba367f79c3aa1aaf169ee\",\r\n});\r\n\r\nconst auth = getAuth();\r\n\r\nconst postsApi = () => {\r\n  const db = getDatabase();\r\n  return ref(db, \"posts\");\r\n};\r\n\r\nconst useUser = (userData, canCreate) => {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (!userData?.uid) {\r\n      return;\r\n    }\r\n\r\n    let isSubscribed = true;\r\n    const db = getDatabase();\r\n    const userIdApi = ref(db, `users/${userData.uid}`);\r\n    onValue(userIdApi, (snapshot) => {\r\n      if (!isSubscribed) {\r\n        return;\r\n      }\r\n\r\n      const userObj = snapshot.val();\r\n      if (!userObj) {\r\n          if (canCreate) {\r\n            const newUser = {\r\n            displayName: userData.displayName,\r\n            email: userData.email,\r\n            };\r\n\r\n            push(userIdApi, newUser);\r\n          }\r\n      } else {\r\n        const userList = Object.keys(userObj).map((key) => ({\r\n          ...userObj[key],\r\n          id: key,\r\n        }));\r\n\r\n        setUser(userList[0]);\r\n      }\r\n    });\r\n\r\n    return () => (isSubscribed = false);\r\n  }, [userData, canCreate]);\r\n\r\n  return [user];\r\n};\r\n\r\nconst sendPost = (newPost) => {\r\n  push(postsApi(), newPost);\r\n};\r\n\r\nconst deletePost = (postId) => {\r\n    const db = getDatabase();\r\n    const postIdApi = ref(db, `posts/${postId}`);\r\n    remove(postIdApi);\r\n}\r\n\r\nconst usePosts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    onValue(postsApi(), (snapshot) => {\r\n      if (!isSubscribed) {\r\n        return;\r\n      }\r\n      const postObj = snapshot.val();\r\n      if (postObj) {\r\n        const postList = Object.keys(postObj).map((key) => ({\r\n          ...postObj[key],\r\n          id: key,\r\n        }));\r\n\r\n        if (isSubscribed) {\r\n          setPosts(postList);\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => (isSubscribed = false);\r\n  }, []);\r\n\r\n  return [posts];\r\n};\r\n\r\nexport const FirebaseService = createContext({\r\n  usePosts,\r\n  sendPost,\r\n  deletePost,\r\n  useUser,\r\n  app,\r\n  auth,\r\n  useAuthState,\r\n  useCollectionData,\r\n  providers: {\r\n    google: GoogleAuthProvider,\r\n  },\r\n  signInWithPopup,\r\n});\r\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { routes } from \"../../data/routes\";\nimport { FirebaseService } from \"../../services/FirebaseService\";\nimport \"firebase/firestore\";\n\nexport const Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to={routes.blog}>\n        Roybeast\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavDropdown\"\n        aria-controls=\"navbarNavDropdown\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={routes.blog}>\n              {\"Blog\"}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={routes.about}>\n              {\"About\"}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={routes.books}>\n              {\"Books\"}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              href=\"https://www.linkedin.com/in/christopher-roybal/\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                fill=\"currentColor\"\n                className=\"bi bi-linkedin\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path d=\"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z\" />\n              </svg>\n            </a>\n          </li>\n        </ul>\n      </div>\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <SignIn />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nconst SignIn = () => {\n  const { auth, useAuthState, providers, signInWithPopup, useUser } =\n    useContext(FirebaseService);\n  const [userSignIn] = useAuthState(auth);\n  const [userData] = useUser(userSignIn);\n\n  const signInHandler = async () => {\n    // Google sign in\n    const provider = new providers.google();\n    await signInWithPopup(auth, provider);\n  };\n\n  const signOutHandler = () => {\n    auth.signOut();\n  };\n\n  return userSignIn ? (\n    <div className=\"dropdown\">\n      <button\n        className=\"btn btn-dark dropdown-toggle\"\n        type=\"button\"\n        id=\"dropDownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        {userSignIn.displayName}\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n        {userData.isAdmin && (\n          <Link className=\"dropdown-item btn btn-dark\" to={routes.newPost}>\n            {\"New Post\"}\n          </Link>\n        )}\n        <button className=\"dropdown-item btn btn-dark\" onClick={signOutHandler}>\n          {\"Sign out\"}\n        </button>\n      </div>\n    </div>\n  ) : (\n    <button className=\"btn btn-dark\" onClick={signInHandler}>\n      {\"Sign in\"}\n    </button>\n  );\n};\n","import React from 'react';\r\n\r\nexport const Jumbotron = ({ children }) => {\r\n    return <div className=\"jumbotron\" style={{}}>{children}</div>\r\n}","import React from \"react\";\r\n\r\nexport const Container = ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n","import React, { useMemo } from \"react\";\r\n\r\nconst Card = ({ children, variant }) => {\r\n  const maxWidth = useMemo(() => {\r\n    if (variant === \"medium\") {\r\n      return \"36rem\";\r\n    } else if (variant === \"large\") {\r\n      return \"54rem\";\r\n    }\r\n\r\n    // small/default\r\n    return \"18rem\";\r\n  }, [variant]);\r\n\r\n  return (\r\n    <div className=\"card\" style={{ margin: \"4px\", padding: \"16px\", maxWidth, minWidth: \"18rem\" }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Body = ({ children }) => {\r\n  return <div className=\"card-body\"></div>;\r\n};\r\n\r\nconst TopImage = ({ src, alt }) => {\r\n  return <img className=\"card-img-top\" src={src} alt={alt} />;\r\n};\r\n\r\nconst Title = ({ children }) => {\r\n  return <h5 className=\"card-title\">{children}</h5>;\r\n};\r\n\r\nconst Text = ({ children }) => {\r\n  return <p className=\"card-text\">{children}</p>;\r\n};\r\n\r\nconst Link = ({ href, text }) => {\r\n  return (\r\n    <a href={href} className=\"card-link\" target=\"_blank\" rel=\"noreferrer\">\r\n      {text}\r\n    </a>\r\n  );\r\n};\r\n\r\nCard.Body = Body;\r\nCard.TopImage = TopImage;\r\nCard.Title = Title;\r\nCard.Text = Text;\r\nCard.Link = Link;\r\n\r\nexport { Card };\r\n","import { Container } from '../Container';\r\nimport React from 'react';\r\n\r\nconst Grid = ({children}) => {\r\n    return (\r\n        <Container>\r\n            {children}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Row = ({children}) => {\r\n    return (<div className=\"row\">{children}</div>)\r\n}\r\n\r\nconst Column = ({children}) => {\r\n    return (<div className=\"col\">{children}</div>)\r\n}\r\n\r\nGrid.Column = Column;\r\nGrid.Row = Row;\r\n\r\nexport { Grid };","import React, { useContext, useMemo } from \"react\";\r\nimport { Card, Jumbotron } from \"../../strapped\";\r\nimport { FirebaseService } from \"../../services/FirebaseService\";\r\n\r\nexport const PostCard = ({ post, onDelete, canDelete }) => {\r\n  return (\r\n    <Card variant=\"large\">\r\n      <div style={{ display: \"flex\" }}>\r\n        <Card.Title>{post.title}</Card.Title>\r\n        {canDelete && (\r\n          <div className=\"ml-auto\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm\"\r\n              onClick={onDelete}\r\n            >\r\n              {\"X\"}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Card.Text>{post.description}</Card.Text>\r\n      {post.link && <Card.Link href={post.link} text={post.linkText} />}\r\n      <Card.Text>{`${post.date.day} ${post.date.month}, ${post.date.year}`}</Card.Text>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst parsePostDate = (post) => {\r\n  return Date.parse(`${post.date.month} ${post.date.day}, ${post.date.year}`);\r\n};\r\nconst postDateComparer = (a, b) => {\r\n  const aDate = parsePostDate(a);\r\n  const bDate = parsePostDate(b);\r\n  return bDate - aDate;\r\n};\r\n\r\nexport const Blog = () => {\r\n  const { usePosts, useUser, useAuthState, deletePost, auth } = useContext(FirebaseService);\r\n  const [postsFeed] = usePosts();\r\n  const [userSignIn] = useAuthState(auth);\r\n  const [userData] = useUser(userSignIn);\r\n  const posts = useMemo(\r\n    () => [...postsFeed].sort(postDateComparer),\r\n    [postsFeed]\r\n  );\r\n\r\n  const onDeleteHandler = (id) => {\r\n    deletePost(id);\r\n  };\r\n\r\n  return (\r\n    <Jumbotron>\r\n      {posts.map((post) => (\r\n        <PostCard\r\n          key={post.id}\r\n          post={post}\r\n          canDelete={userData?.isAdmin}\r\n          onDelete={() => onDeleteHandler(post.id)}\r\n        />\r\n      ))}\r\n    </Jumbotron>\r\n  );\r\n};\r\n","export const aboutData = [\n  {\n    title: \"About myself\",\n    text: [\n      \"Always hard to write about myself...\",\n      \"Presently working as a software developer.\",\n      \"Enjoys playing video games in free time.\",\n      \"Happily married since sometime in 2019.\",\n    ],\n  },\n  {\n    title: \"Software development\",\n    text: [\n      \"Strong C# background (desktop app, backend APIs, mobile app)\",\n      \"Various exposure to: C#, C++, C, Javascript, React, Objective-C, MySQL\",\n      \"have some exposure to: Docker, Github Actions, Jenkins\",\n      \"Currently working with React/Typescript/Javascript\",\n    ],\n  },\n  {\n    title: \"Education\",\n    text: [\"BS degree in Computer Science from Western Washington University\"],\n  },\n];\n","import React from \"react\";\r\nimport { Card, Grid, Jumbotron } from \"../../strapped\";\r\nimport \"./styles.css\";\r\nimport { aboutData } from '../../data/about'\r\n\r\nexport const About = () => {\r\n  return (\r\n    <Jumbotron>\r\n      <Grid>\r\n        <Grid.Row>\r\n          {aboutData.map((data, dataIndex) => (\r\n            <Grid.Column key={dataIndex}>\r\n              <Card variant={data.text.length === 1 ? \"small\" : \"medium\"}>\r\n                <Card.Title>{data.title}</Card.Title>\r\n                {data.text.map((text, textIndex) => (\r\n                  <Card.Text key={textIndex}>{text}</Card.Text>\r\n                ))}\r\n              </Card>\r\n            </Grid.Column>\r\n          ))}\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Jumbotron>\r\n  );\r\n};\r\n","export const booksData = [\n  {\n    id: \"books-0\",\n    title: \"Level Up! The Guide to Great Video Game Design 2nd Edition\",\n    description: \"A book about game design\",\n    author: \"Scott Rogers\",\n    review: \"In Progress\",\n    pages: 535,\n    link: \"https://www.amazon.com/Level-Guide-Great-Video-Design/dp/1118877160/\",\n    linkText: \"Amazon\",\n  },\n];\n","import React from \"react\";\r\nimport { Card, Jumbotron } from \"../../strapped\";\r\nimport { booksData } from '../../data/books'\r\n\r\nexport const Books = () => {\r\n  return (\r\n    <Jumbotron>\r\n      {booksData.map((book) => (\r\n        <Card variant=\"large\" key={book.id}>\r\n          <Card.Title>{book.title}</Card.Title>\r\n          <Card.Text>{book.description}</Card.Text>\r\n          <Card.Text>{`Pages: ${book.pages}`}</Card.Text>\r\n          <Card.Text>{`Author: ${book.author}`}</Card.Text>\r\n          <Card.Text>{`Review: ${book.review}`}</Card.Text>\r\n          {book.link && <Card.Link href={book.link} text={book.linkText} />}\r\n        </Card>\r\n      ))}\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\n","import React, { useContext, useState } from \"react\";\r\nimport { FirebaseService } from \"../../services/FirebaseService\";\r\nimport { Jumbotron } from \"../../strapped\";\r\nimport { PostCard } from \"../Blog\";\r\n\r\nconst getInitialState = () => {\r\n  const date = new Date();\r\n  return {\r\n    title: \"\",\r\n    description: \"\",\r\n    date: {\r\n      month: date.toLocaleDateString(\"en-US\", { month: \"long\" }),\r\n      day: date.toLocaleDateString(\"en-US\", { day: \"2-digit\" }),\r\n      year: date.toLocaleDateString(\"en-US\", { year: \"numeric\" }),\r\n    },\r\n    link: \"\",\r\n    linkText: \"\",\r\n  };\r\n};\r\n\r\nexport const PostForm = () => {\r\n  const [post, setPost] = useState(getInitialState());\r\n  const { sendPost } = useContext(FirebaseService);\r\n\r\n  const updatePost = (value) => {\r\n    setPost((post) => {\r\n      return { ...post, ...value };\r\n    });\r\n  };\r\n\r\n  const onSubmitHandler = () => {\r\n      sendPost(post);\r\n      setPost(getInitialState());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">{\"Title\"}</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              placeholder=\"Title\"\r\n              value={post.title}\r\n              onChange={(event) => updatePost({ title: event.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">{\"Description\"}</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              placeholder=\"Description\"\r\n              value={post.description}\r\n              onChange={(event) =>\r\n                updatePost({ description: event.target.value })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"link\">{\"Link\"}</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"link\"\r\n              placeholder=\"Link\"\r\n              value={post.link}\r\n              onChange={(event) => updatePost({ link: event.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"linkText\">{\"Link Text\"}</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"linkText\"\r\n              placeholder=\"Link Text\"\r\n              value={post.linkText}\r\n              onChange={(event) => updatePost({ linkText: event.target.value })}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-dark\"\r\n            onClick={onSubmitHandler}\r\n          >\r\n            {\"Submit\"}\r\n          </button>\r\n        </form>\r\n      </Jumbotron>\r\n      <PostCard post={post} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Navbar, Blog, About, Books, PostForm } from \"./components\";\nimport { routes } from \"./data/routes\";\nimport { FirebaseService } from \"./services/FirebaseService\";\n\nfunction App() {\n  const { useAuthState, auth, useUser } = useContext(FirebaseService);\n  const [userSignIn] = useAuthState(auth);\n  const [userData] = useUser(userSignIn, true);\n  console.log(userSignIn);\n  console.log(userData);\n\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path={routes.books}>\n          <Books />\n        </Route>\n        <Route path={routes.about}>\n          <About />\n        </Route>\n        {userData.isAdmin && (\n          <Route path={routes.newPost}>\n            <PostForm />\n          </Route>\n        )}\n        <Route path={routes.blog}>\n          <Blog />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}